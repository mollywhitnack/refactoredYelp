"use strict";var app=angular.module("myApp",["ui.router","satellizer","ngFileUpload"]);app.config(["$authProvider",function(e){e.loginUrl="api/users/login",e.signupUrl="api/users/signup",e.facebook({clientId:"255060128209165",url:"/api/users/facebook"})}]),app.config(["$stateProvider","$urlRouterProvider",function(e,t){e.state("home",{url:"/",templateUrl:"/html/home.html"}).state("login",{url:"/login",templateUrl:"/html/login.html",controller:"loginCtrl"}).state("register",{url:"/register",templateUrl:"/html/register.html",controller:"registerCtrl"}).state("profile",{url:"/profile/:userId",templateUrl:"/html/profile.html",controller:"profileCtrl",resolve:{Profile:["User",function(e){return e.profile()}],ProfileByID:["User","$stateParams",function(e,t){return e.getProfile(t.userId)}]}}).state("users",{url:"/users",templateUrl:"/html/users.html",controller:"usersCtrl"}).state("business",{url:"/business",templateUrl:"/html/business.html",controller:"businessCtrl",resolve:{Profile:["User",function(e){return e.profile()}]}}).state("showBusiness",{url:"/business/:businessId",templateUrl:"html/showbusiness.html",controller:"showbusinessCtrl",resolve:{Profile:["User",function(e){return e.profile()}]}}),t.otherwise("/")}]);var app=angular.module("myApp");app.controller("businessCtrl",["$scope","User","$rootScope","Business","Profile",function(e,t,o,n,r){e.businesses=[];var s=r.favorites;e.searchBusiness=function(){n.searchYelp(e.newItem.searchParams).then(function(t){for(var o=0;o<s.length;o++)t.id===s[o]&&(e.toggleFave=!0);e.businesses.push(t)})["catch"](function(e){console.log("err in businessCtrl: ",e)})},e.searchBusiness2=function(){var t={};e.newItem.location&&(t.location=e.newItem.location),e.newItem.term&&(t.term=e.newItem.term),n.searchCatagories(t).then(function(t){e.toggleFave=new Array(t.businesses.length);for(var o=0;o<t.businesses.length;o++)for(var n=0;n<s.length;n++)console.log(),t.businesses[o].id===s[n]?e.toggleFave[o]=1:e.toggleFave[o]=0;e.businesses=t.businesses})["catch"](function(e){console.log("err in businessCtrl: ",e)})},e.favorite=function(o){e.toggleFave[o]=!e.toggleFave[o],t.addFavoriteToUser(r._id,e.businesses[o].id).then(n.addFavorite(e.businesses[o],r._id)).then(function(e){})["catch"](function(e){console.log("err in businessCtrl: ",e)})},e.unFavorite=function(o){e.toggleFave[o]=!e.toggleFave[o],t.removeFavoritefromUser(r._id,e.businesses[o].id).then(function(e){console.log("res:",e)})["catch"](function(e){console.log("err in businessCtrl: ",e)})}}]);var app=angular.module("myApp");app.controller("imageCtrl",["$scope","Upload","Profile","$rootScope",function(e,t,o,n){console.log("image ctrl"),n.currentUser=o,e.submit=function(){console.log("submit"),console.log("$scope.file:",e.file),t.upload({url:"/api/images",data:{photo:e.file,user:n.currentUser._id}}).then(function(t){console.log("res: ",t),e.savedImage=t.data})["catch"](function(e){console.log("err:",e)})}}]);var app=angular.module("myApp");app.controller("loginCtrl",["$scope","$state","$auth","$rootScope",function(e,t,o,n){console.log("loginCtrl!"),e.login=function(){o.login(e.user).then(function(e){console.log("res: ",e),t.go("profile")})["catch"](function(e){swal({title:"Error!",text:"Invalid Email or Password",type:"error",confirmButtonText:"Ok"})})}}]);var app=angular.module("myApp");app.controller("mainCtrl",["$scope","$state","$auth","$rootScope",function(e,t,o,n){n.currentUser,e.isAuthenticated=function(){return o.isAuthenticated()},e.logout=function(){o.logout(),t.go("home")},e.authenticate=function(e){o.authenticate(e).then(function(e){t.go("home")})["catch"](function(e){console.log("err:",e)})}}]);var app=angular.module("myApp");app.controller("profileCtrl",["$scope","Profile","Business","ProfileByID","$state","User","$rootScope","WallPost",function(e,t,o,n,r,s,l,i){l.currentUser=t,e.user=n||t,i.getWallPosts(e.user._id).then(function(t){e.userWallposts=t}),e.displayFaves=[];for(var u=0;u<t.favorites.length;u++)o.searchYelp(t.favorites[u]).then(function(t){console.log(t),e.displayFaves.push(t)})["catch"](function(e){console.log("err in businessCtrl: ",e)});e.showdisplayNameForm=function(){console.log("show form"),e.displayNameForm=!0},e.updatedisplayName=function(){e.displayNameForm=!1,e.user.displayName=e.newItem.displayName,s.updateProfile(e.user._id,e.newItem).then(function(t){console.log("profile:",t),e.newItem.displayName=""})["catch"](function(e){console.log("err:",e)})},e.canceldisplayName=function(){e.usernameForm=!0,e.newItem.displayName=""},e.showPictureForm=function(){console.log("show form"),e.photoForm=!0},e.updatePicture=function(){e.photoForm=!1,console.log("$state.current: ",r.current),e.user.profileImage=e.newItem.profileImage,console.log("$scope.newItem:",e.newItem),s.updateProfile(e.user._id,e.newItem).then(function(t){console.log("profile:",t),e.newItem.profileImage=""})["catch"](function(e){console.log("err:",e)})},e.cancelPhotoUrl=function(){e.photoForm=!0,e.newItem.photoUrl=""},e.deleteAccount=function(e){console.log(e._id),s.deleteAccount(e._id).then()["catch"](function(e){console.log("err: ",e)})},e.submitMessage=function(){var t={to:e.user,from:l.currentUser._id,fromName:l.currentUser.displayName,text:e.newItem.text,createdAt:"add moment"};i.addWallPost(t).then(function(e){s.addWallPostToUser(n._id,e._id)}).then(r.go(r.$current,null,{reload:!0}))["catch"](function(e){console.log("err: ",e)})}}]);var app=angular.module("myApp");app.controller("registerCtrl",["$scope","$state","$auth",function(e,t,o){console.log("registerCtrl!"),e.register=function(){e.user.password!==e.user.password2?(e.user.password=null,e.user.password2=null,alert("Passwords must match!")):o.signup(e.user).then(function(e){console.log("res: ",e),t.go("login")})["catch"](function(e){swal({title:"Error!",text:"Invalid Email or Password",type:"error",confirmButtonText:"Ok"})})}}]);var app=angular.module("myApp");app.controller("showbusinessCtrl",["$scope","$stateParams","Business","Profile","User",function(e,t,o,n,r){e.showButton=!1,e.singletoggleFave=!1;var s=n.favorites,l=t;o.searchYelp(l.businessId).then(function(t){e.business=t,e.showButton=!0;for(var o=0;o<s.length;o++)s[o]===t.id&&(e.singletoggleFave=!0)})["catch"](function(e){console.log("err in businessCtrl: ",e)}),e.favorite=function(){e.singletoggleFave=!e.singletoggleFave,r.addFavoriteToUser(n._id,e.business.id).then(o.addFavorite(e.business,n._id)).then(function(e){})["catch"](function(e){console.log("err in businessCtrl: ",e)})},e.unFavorite=function(){e.singletoggleFave=!e.singletoggleFave,r.removeFavoritefromUser(n._id,e.business.id).then(function(e){})["catch"](function(e){console.log("err in businessCtrl: ",e)})}}]);var app=angular.module("myApp");app.controller("usersCtrl",["$scope","$$state","$state","User",function(e,t,o,n){var r=n.getAll();r.then(function(t){e.userFeed=t.data})}]);var app=angular.module("myApp");app.service("Business",["$http","$q",function(e,t){this.getMap=function(o){return e.get("/api/businesses/map",o).then(function(e){return t.resolve(e.data)})["catch"](function(e){console.log("err:",e)})},this.searchYelp=function(o){return e.get("/api/businesses/yelp/"+o).then(function(e){return t.resolve(e.data)})["catch"](function(e){console.log("err:",e)})},this.searchCatagories=function(o){return e.post("/api/businesses/yelp/yelpCatagories",o).then(function(e){return t.resolve(e.data)})["catch"](function(e){console.log("err:",e)})},this.addFavorite=function(o,n){return e.post("/api/businesses/"+n,o).then(function(e){return t.resolve(e)})["catch"](function(e){console.log("err:",e)})}}]);var app=angular.module("myApp");app.service("image",["$http","$q",function(e,t){this.getAll=function(){return e.get("/api/cruds")},this.getById=function(t){return e.get("/api/cruds/"+t)},this.addCrud=function(o){return e.post("/api/cruds",o).then(function(e){return t.resolve(e.data)})["catch"](function(e){console.log("err:",e)})},this.deleteCrud=function(o){return e["delete"]("/api/cruds/"+o).then(function(){return t.resolve()})["catch"](function(e){console.log("err:",e)})},this.updateCrud=function(o,n){return e.put("/api/cruds/"+o,n).then(function(e){return t.resolve(n)})["catch"](function(e){console.log("err:",e)})}}]);var app=angular.module("myApp");app.service("User",["$http","$q",function(e,t){this.profile=function(){return e.get("/api/users/profile").then(function(e){return t.resolve(e.data)})},this.getProfile=function(o){return e.get("/api/users/profile/"+o).then(function(e){return t.resolve(e.data)})["catch"](function(e){console.log("err:",e)})},this.getAll=function(){return e.get("/api/users")},this.updateProfile=function(o,n){return e.put("/api/users/profile/"+o,n).then(function(e){return t.resolve()})["catch"](function(e){console.log("err:",e)})},this.deleteAccount=function(o){return e["delete"]("/api/users/profile/"+o).then(function(e){return t.resolve()})["catch"](function(e){console.log("err:",e)})},this.addFavoriteToUser=function(o,n){return e.put("/api/users/profile/"+o+"/add/"+n).then(function(e){return t.resolve()})["catch"](function(e){console.log("err:",e)})},this.removeFavoritefromUser=function(o,n){return e.put("/api/users/profile/"+o+"/remove/"+n).then(function(e){return t.resolve()})["catch"](function(e){console.log("err:",e)})}}]);var app=angular.module("myApp");app.service("WallPost",["$http","$q",function(e,t){this.addWallPost=function(o){return console.log("in add wallpost: ",o),e.post("/api/wallposts",o).then(function(e){return t.resolve(e.data)})["catch"](function(e){console.log("err:",e)})},this.getWallPosts=function(o){return e.get("/api/wallposts/"+o).then(function(e){return t.resolve(e.data)})["catch"](function(e){console.log("err: ",e)})}}]);
//# sourceMappingURL=data:application/json;base64,
